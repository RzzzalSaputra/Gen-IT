{
    "openapi": "3.0.0",
    "info": {
        "title": "Gen-IT API Documentation",
        "description": "API documentation for Gen-IT application",
        "contact": {
            "name": "API Support",
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get all articles including soft deleted ones",
                "description": "Returns list of all articles including soft deleted records",
                "operationId": "93ded9e31119e6bbb22455c72ef97f19",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article",
                "operationId": "75bdc5f953261e6f34852386c9b522c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug",
                                    "content",
                                    "summary",
                                    "status",
                                    "type",
                                    "writer",
                                    "post_time"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "summary": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "writer": {
                                        "type": "string"
                                    },
                                    "post_time": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Article created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Article created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/articles/active": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get all active articles",
                "description": "Returns list of active (not soft deleted) articles",
                "operationId": "48a43806e2e71d64f934ec9bc523bfb5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get specific article by ID",
                "operationId": "a85697b2464e9aaa3f9980a83edbef88",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Articles"
                ],
                "summary": "Update an existing article",
                "operationId": "beb39fc2f8d02c16b41438aadbd9ba03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "slug": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "summary": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "writer": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "post_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Article updated successfully"
                    },
                    "404": {
                        "description": "Article not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Articles"
                ],
                "summary": "Soft delete an article",
                "operationId": "804276a4147e577744e158b2ce2b58f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article deleted successfully"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/articles/{id}/restore": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "summary": "Restore a soft-deleted article",
                "operationId": "e304ce2e9a7d8af15e5074862f41b808",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article restored successfully"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and create token",
                "operationId": "19f36851d5ed722e1130dc645faaca59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "itsuki@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and revoke token",
                "operationId": "4cc3fac227230eb7221c4d0e2ea2e7d7",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get all companies including soft deleted ones",
                "description": "Returns list of all companies including soft deleted records",
                "operationId": "a261a49d113a2af2a5ccb5798c6aae7e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Create a new company",
                "operationId": "4ba2fab8115d4cb8d481328838cb4bba",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "province",
                                    "city",
                                    "address"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Company name - must be unique",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Company description",
                                        "type": "string"
                                    },
                                    "img": {
                                        "description": "Company image",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "gmap": {
                                        "description": "Google Maps embed code or URL",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "province": {
                                        "description": "Province/state location",
                                        "type": "string"
                                    },
                                    "city": {
                                        "description": "City location",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "Full address",
                                        "type": "string"
                                    },
                                    "website": {
                                        "description": "Company website URL",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "instagram": {
                                        "description": "Instagram profile URL/handle",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "facebook": {
                                        "description": "Facebook page URL",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "x": {
                                        "description": "X/Twitter profile URL/handle",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Company created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Company created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "img": {
                                                    "type": "string",
                                                    "example": "/storage/companies/images/img_1.jpg",
                                                    "nullable": true
                                                },
                                                "gmap": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "province": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "instagram": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "facebook": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "x": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "read_counter": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies/active": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get all active companies",
                "description": "Returns list of active (not soft deleted) companies",
                "operationId": "31ac160d828b2a01d2974b38d01c7db0",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/companies/{id}": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get specific company by ID",
                "operationId": "50805cb17562834cb99c0477437c5221",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Update an existing company",
                "description": "Update a company with optional image upload.",
                "operationId": "3efeefb221b16a5186943b654d6e1f31",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "gmap": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "province": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "x": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company updated successfully"
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Companies"
                ],
                "summary": "Soft delete a company",
                "operationId": "1ac24859e93bfa251a6d0c57ef1ca184",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted successfully"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "/api/companies/{id}/restore": {
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Restore a soft-deleted company",
                "operationId": "3663ac6ce47801fd5b72a84179667777",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company restored successfully"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get all contacts",
                "operationId": "bc39494d59500e2d75e6f6648b43c8de",
                "responses": {
                    "200": {
                        "description": "List of contacts"
                    },
                    "403": {
                        "description": "Unauthorized - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create new contact",
                "operationId": "779a1f2268bae1138e7ea7843dd88d90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contact by ID",
                "operationId": "2a2c193f37e667891b7a6bc95e8e4132",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact details"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update contact message only",
                "operationId": "45636eb97c78bd0e474d5507fde18f1a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact message updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact message updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "New message content"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete contact",
                "operationId": "a4fa6d0e82512d1fac868a7b61e6a2e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success deleting contact with ID: 5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/{id}/respond": {
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update response for contact",
                "operationId": "c3d5e4308e999d3cc3a4c28767f88801",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "respond_message"
                                ],
                                "properties": {
                                    "respond_message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Response updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "respond_message": {
                                                    "type": "string",
                                                    "example": "Your response here"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "responded"
                                                },
                                                "respond_by": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/{id}/restore": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Restore deleted contact",
                "operationId": "fa9ecb364c17c2999b5e08d6d001727f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact restored successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/gallery": {
            "get": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Get all gallery items",
                "operationId": "9f04eba8f10637da7f41b33254912b00",
                "responses": {
                    "200": {
                        "description": "List of gallery items"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Create new gallery item",
                "operationId": "166abfcfe0bd807724ed4646676d4cee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "file": {
                                        "type": "file"
                                    },
                                    "link": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Gallery item created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/gallery/{id}": {
            "get": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Get gallery item by ID",
                "operationId": "a32d14779010e437d08541da269f4df4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery item details"
                    },
                    "404": {
                        "description": "Gallery item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Update gallery item",
                "operationId": "600a6602a1df987d94cc1bf660119d1a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID dari gallery yang akan diperbarui",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Gambar Baru",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com",
                                        "nullable": true
                                    },
                                    "file": {
                                        "description": "File gambar yang akan diupload",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Gallery item updated successfully"
                    },
                    "404": {
                        "description": "Gallery item not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Delete gallery item",
                "operationId": "f931441c697db8334a6259988249f7bd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery item deleted successfully"
                    },
                    "404": {
                        "description": "Gallery item not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jobs": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get all job listings including soft deleted ones",
                "description": "Returns list of all jobs including soft deleted records",
                "operationId": "63963513839a812f56fe5eddf9fe529a",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Create a new job listing",
                "operationId": "c964c62023b02e106a37b155aeee84cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "company_id",
                                    "title",
                                    "description",
                                    "requirment",
                                    "salary_range",
                                    "register_link",
                                    "type",
                                    "experience"
                                ],
                                "properties": {
                                    "company_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "requirment": {
                                        "type": "string"
                                    },
                                    "salary_range": {
                                        "type": "integer"
                                    },
                                    "register_link": {
                                        "description": "URL or other text information for registration",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "ID of the option representing job type",
                                        "type": "integer"
                                    },
                                    "experience": {
                                        "description": "ID of the option representing required experience",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Job created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "company_id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "requirment": {
                                                    "type": "string"
                                                },
                                                "salary_range": {
                                                    "type": "integer"
                                                },
                                                "register_link": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "integer"
                                                },
                                                "experience": {
                                                    "type": "integer"
                                                },
                                                "read_counter": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jobs/active": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get all active job listings",
                "description": "Returns list of active (not soft deleted) jobs",
                "operationId": "49343d43b9e18a270336fee3778cf14f",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/jobs/{id}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get specific job by ID",
                "operationId": "46795332805e4a49b36760cdb06df2b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Update an existing job listing",
                "operationId": "af60016ed3e562c1585eae632034913c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "requirment": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "salary_range": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "register_link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "experience": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job updated successfully"
                    },
                    "404": {
                        "description": "Job not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Soft delete a job listing",
                "operationId": "a47d17b6394b4a069ad7b05aad432a92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job deleted successfully"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                }
            }
        },
        "/api/jobs/{id}/restore": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Restore a soft-deleted job",
                "operationId": "cebda759f6f02b1831a92d3a1b16f848",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job restored successfully"
                    },
                    "404": {
                        "description": "Job not found"
                    }
                }
            }
        },
        "/api/companies/{companyId}/jobs": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get all jobs for a specific company",
                "operationId": "173af0da1bd6e8c4473c3d1b024e9989",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "/api/materials": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "summary": "Get all materials",
                "operationId": "5f90e5ed7d0e44b67d3fb4893d531d21",
                "responses": {
                    "200": {
                        "description": "List of materials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Materials"
                ],
                "summary": "Create a new material",
                "operationId": "3368b7d9a38b578df661984351ea78b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug",
                                    "content",
                                    "layout",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "layout": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "file": {
                                        "type": "file",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "file",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Material created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/materials/{id}": {
            "post": {
                "tags": [
                    "Materials"
                ],
                "summary": "Update an existing material",
                "description": "Update a material with optional file and image uploads.",
                "operationId": "de8296c4ea24680de4d6db961a7f3d45",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Material ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "slug": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "layout": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Material updated successfully"
                    },
                    "404": {
                        "description": "Material not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Materials"
                ],
                "summary": "Delete material",
                "operationId": "99a136c3942a510c263cbd4a32ac5392",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Material deleted successfully"
                    },
                    "404": {
                        "description": "Material not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/materials/{id}/restore": {
            "post": {
                "tags": [
                    "Materials"
                ],
                "summary": "Restore a deleted material",
                "operationId": "8e312817befdba6b25d9196bcc7e0ccf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Material ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Material restored successfully"
                    },
                    "404": {
                        "description": "Material not found"
                    },
                    "400": {
                        "description": "Material is not deleted"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/options": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get all options including soft deleted ones",
                "description": "Returns list of all options including soft deleted records",
                "operationId": "bf647c54bc541968a0dbc4111982da23",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "deleted_at": {
                                                "type": "string",
                                                "format": "datetime",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Options"
                ],
                "summary": "Create a new option",
                "description": "Store a newly created option",
                "operationId": "9b403a2f22108f8b0db3e14629226158",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "value"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "value": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Option created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/options/active": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get all active options",
                "description": "Returns list of active (not soft deleted) options",
                "operationId": "afb195c7f4abd31021a584cfe11b4332",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/options/{id}": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get specific option by ID",
                "description": "Returns a specific option by ID including soft deleted ones",
                "operationId": "0d7a914e4d347ad1265d169d93f7ea17",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "datetime",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Options"
                ],
                "summary": "Update an option",
                "description": "Update the specified option",
                "operationId": "a57a1ba53855c8dadfdf4e819727f0b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "value": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Options"
                ],
                "summary": "Soft delete an option",
                "description": "Soft delete the specified option",
                "operationId": "79b9cd9e3a3b9d159253c24bf51c1323",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Option deleted successfully"
                    },
                    "404": {
                        "description": "Option not found"
                    }
                }
            }
        },
        "/api/options/{id}/restore": {
            "post": {
                "tags": [
                    "Options"
                ],
                "summary": "Restore a soft-deleted option",
                "description": "Restore a previously soft-deleted option",
                "operationId": "88a61d538f52a3bb24a1b16c59570b60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Option restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "datetime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found"
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all posts including soft deleted ones",
                "description": "Returns list of all posts including soft deleted records",
                "operationId": "3fda362e2e082b5357ac416e7767e435",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "dcb66200c3132996151884ac232cf439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug",
                                    "content",
                                    "layout"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "layout": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "slug": {
                                                    "type": "string"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "file": {
                                                    "type": "string",
                                                    "example": "/storage/posts/files/file_1.pdf",
                                                    "nullable": true
                                                },
                                                "img": {
                                                    "type": "string",
                                                    "example": "/storage/posts/images/img_1.jpg",
                                                    "nullable": true
                                                },
                                                "layout": {
                                                    "type": "integer"
                                                },
                                                "created_by": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/active": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all active posts",
                "description": "Returns list of active (not soft deleted) posts",
                "operationId": "c07998632e5f87936a0d820b94c0ce44",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get specific post by ID",
                "operationId": "142b5adb0520cca80cedfe09d9298332",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "description": "Update a post with optional file and image uploads.",
                "operationId": "70c1bbc6926be9ddf5405bea40737a7c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "slug": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "layout": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Soft delete a post",
                "operationId": "9d99f2e42af2f722a058a86245aa856f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    }
                }
            }
        },
        "/api/posts/{id}/restore": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Restore a soft-deleted post",
                "operationId": "86ed38bb0b83de23d1bf7dff083c5fac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post restored successfully"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "0b85f3526b4925ab2e6c86b2f61cf9ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_name",
                                    "email",
                                    "password",
                                    "phone",
                                    "first_name",
                                    "last_name",
                                    "birthdate"
                                ],
                                "properties": {
                                    "user_name": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "example": "6281234567890"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/schools": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get all schools including soft deleted ones",
                "description": "Returns list of all schools including soft deleted records",
                "operationId": "ca27f206450153531c9da4459c02d0b3",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Create a new school",
                "operationId": "8b6a622f088367e6e43f23dd5ab5e8e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "type",
                                    "province",
                                    "city",
                                    "address"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "gmap": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "province": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "website": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "x": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "School created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "School created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "img": {
                                                    "type": "string",
                                                    "example": "/storage/schools/images/img_1.jpg",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "integer"
                                                },
                                                "gmap": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "province": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "instagram": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "facebook": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "x": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "read_counter": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schools/active": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get all active schools",
                "description": "Returns list of active (not soft deleted) schools",
                "operationId": "50cf2f2f269aa91c4cc9700a94c3f8ef",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/schools/{id}": {
            "get": {
                "tags": [
                    "Schools"
                ],
                "summary": "Get specific school by ID",
                "operationId": "8f56f996b579a01b6acf2b397f432d4f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "School ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "School not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Update an existing school",
                "description": "Update a school with optional image upload.",
                "operationId": "e040a8c49a55549ee10eebf4caf4c1ce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "School ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "gmap": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "province": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "x": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "School updated successfully"
                    },
                    "404": {
                        "description": "School not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schools"
                ],
                "summary": "Soft delete a school",
                "operationId": "efd998fb9e8b130138a49d43b89971f3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "School ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School deleted successfully"
                    },
                    "404": {
                        "description": "School not found"
                    }
                }
            }
        },
        "/api/schools/{id}/restore": {
            "post": {
                "tags": [
                    "Schools"
                ],
                "summary": "Restore a soft-deleted school",
                "operationId": "4442c766fca4dc8f5ea51a0705d4acd7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "School ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School restored successfully"
                    },
                    "404": {
                        "description": "School not found"
                    }
                }
            }
        },
        "/api/studies": {
            "get": {
                "tags": [
                    "Studies"
                ],
                "summary": "Get all study programs including soft deleted ones",
                "description": "Returns list of all study programs including soft deleted records",
                "operationId": "f852a5bf21c1d45f95b52cf7865446ed",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Studies"
                ],
                "summary": "Create a new study program",
                "operationId": "c03db6b583acf727850f220e1306a12c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "school_id",
                                    "name",
                                    "description",
                                    "duration",
                                    "level"
                                ],
                                "properties": {
                                    "school_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "duration": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "level": {
                                        "description": "ID of the option representing the education level",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Study program created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Study program created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "school_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "duration": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "img": {
                                                    "type": "string",
                                                    "example": "/storage/studies/images/img_1.jpg",
                                                    "nullable": true
                                                },
                                                "level": {
                                                    "type": "integer"
                                                },
                                                "read_counter": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/studies/active": {
            "get": {
                "tags": [
                    "Studies"
                ],
                "summary": "Get all active study programs",
                "description": "Returns list of active (not soft deleted) study programs",
                "operationId": "e91dc21b33b8988812a923b5581e4544",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/studies/{id}": {
            "get": {
                "tags": [
                    "Studies"
                ],
                "summary": "Get specific study program by ID",
                "operationId": "43bfd7c1ea8d5cf3f6f25503a956cadc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Study ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Study program not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Studies"
                ],
                "summary": "Update an existing study program",
                "description": "Update a study program with optional image upload.",
                "operationId": "2f3e42f5dc6484843100f9ae3f44c53e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Study ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "school_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "duration": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "level": {
                                        "description": "ID of the option representing the education level",
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Study program updated successfully"
                    },
                    "404": {
                        "description": "Study program not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Studies"
                ],
                "summary": "Soft delete a study program",
                "operationId": "73ac6dab4d384ec118d6adb76b79ea21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Study ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Study program deleted successfully"
                    },
                    "404": {
                        "description": "Study program not found"
                    }
                }
            }
        },
        "/api/studies/{id}/restore": {
            "post": {
                "tags": [
                    "Studies"
                ],
                "summary": "Restore a soft-deleted study program",
                "operationId": "37fa19749da3cfd30880aa6791ce5d62",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Study ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Study program restored successfully"
                    },
                    "404": {
                        "description": "Study program not found"
                    }
                }
            }
        },
        "/api/schools/{schoolId}/studies": {
            "get": {
                "tags": [
                    "Studies"
                ],
                "summary": "Get all study programs for a specific school",
                "operationId": "9a88e50e3b49b9337fc229f343390da8",
                "parameters": [
                    {
                        "name": "schoolId",
                        "in": "path",
                        "description": "School ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "School not found"
                    }
                }
            }
        },
        "/api/submissions": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Display a listing of submissions",
                "operationId": "1ab2c30900bcf0239d12dadb880c27d4",
                "responses": {
                    "200": {
                        "description": "Submissions retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Store a newly created submission",
                "operationId": "86842154f1dffa008adb43a94e7c19a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "type",
                                    "status"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string"
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Submission created successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Error creating submission"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/submissions/{id}": {
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Update an existing submission",
                "description": "Update a submission with optional file and image uploads.",
                "operationId": "5a5cdb632c1a644be575baebebdee6d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "type": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Submission updated successfully"
                    },
                    "404": {
                        "description": "Submission not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Delete a submission",
                "operationId": "eda69911376172d6b69e32fe2842e482",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission deleted successfully"
                    },
                    "404": {
                        "description": "Submission not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/submissions/{id}/approve": {
            "patch": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Approve a submission",
                "operationId": "ef91dcfbc498322ce6e83303b28d80e4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission approved successfully"
                    },
                    "404": {
                        "description": "Submission not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vicons": {
            "get": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Get all vicons",
                "operationId": "22465994ceb1ecebdf568afb37822cb0",
                "responses": {
                    "200": {
                        "description": "List of all vicons including soft deleted ones"
                    },
                    "403": {
                        "description": "Unauthorized - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Create new vicon",
                "operationId": "6d24fc5e0a8142b8f3e0d2a2d8ff0c75",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "desc",
                                    "img",
                                    "time",
                                    "link"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "desc": {
                                        "type": "string"
                                    },
                                    "img": {
                                        "type": "file"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "link": {
                                        "type": "string"
                                    },
                                    "download": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vicon created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vicon created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vicons/active": {
            "get": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Get all active vicons",
                "description": "Returns list of active (not soft deleted) vicons",
                "operationId": "2c94c3eaafb071a3e8ec19310e4b24e6",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vicons/{id}": {
            "get": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Get vicon by ID",
                "operationId": "17008783c8b929d75b4e1c922a243511",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vicon details"
                    },
                    "404": {
                        "description": "Vicon not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Update vicon",
                "operationId": "b53fe1bd67d205caa9618de82d841647",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "desc": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "img": {
                                        "type": "file",
                                        "nullable": true
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "download": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vicon updated successfully"
                    },
                    "404": {
                        "description": "Vicon not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vicons"
                ],
                "summary": "Delete vicon",
                "operationId": "f7768c0cb0b52b7abc015d9bcf125b6f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vicon deleted successfully"
                    },
                    "404": {
                        "description": "Vicon not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication endpoints"
        },
        {
            "name": "Options",
            "description": "API Endpoints for Options management"
        },
        {
            "name": "Posts",
            "description": "API Endpoints for Posts management"
        },
        {
            "name": "Gallery",
            "description": "Gallery management endpoints"
        },
        {
            "name": "Contacts",
            "description": "Contact management endpoints"
        },
        {
            "name": "Vicons",
            "description": "Video conference management endpoints"
        },
        {
            "name": "Articles",
            "description": "Articles"
        },
        {
            "name": "Companies",
            "description": "Companies"
        },
        {
            "name": "Jobs",
            "description": "Jobs"
        },
        {
            "name": "Materials",
            "description": "Materials"
        },
        {
            "name": "Schools",
            "description": "Schools"
        },
        {
            "name": "Studies",
            "description": "Studies"
        },
        {
            "name": "Submissions",
            "description": "Submissions"
        }
    ]
}